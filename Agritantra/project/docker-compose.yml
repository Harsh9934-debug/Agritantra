version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: agritantra-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: agritantra
      MYSQL_USER: agritantra
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - agritantra-network

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: agritantra-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - agritantra-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: agritantra-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agritantra-network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: agritantra-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: agritantra
      DB_PASSWORD: password
      DB_NAME: agritantra
      MQTT_BROKER_URL: mqtt://mosquitto:1883
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key
    ports:
      - "5000:5000"
      - "8080:8080"
    depends_on:
      - mysql
      - mosquitto
      - redis
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - agritantra-network

  # Frontend (Nginx)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: agritantra-frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - agritantra-network

volumes:
  mysql_data:
  redis_data:

networks:
  agritantra-network:
    driver: bridge